(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{64:function(t,e,i){"use strict";i.r(e),i.d(e,"TestControl",(function(){return r}));i(58);var n=i(39),o=i(3),a=function(t,e,i,n){return new(i||(i=Promise))((function(o,a){function r(t){try{c(n.next(t))}catch(t){a(t)}}function s(t){try{c(n.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,s)}c((n=n.apply(t,e||[])).next())}))};class r{constructor(){this.deviceOrientationConnected=!1,this.alpha=0,this.ignoreMoveStart=!1}onAdd(t){return this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl",this.__init(t,this._container),this._container}__init(t,e){Object(o.c)(n.c`
                <vaadin-button
                    @click=${e=>a(this,void 0,void 0,(function*(){if(DeviceOrientationEvent&&!this.deviceOrientationConnected){if(this.deviceOrientationHandler=e=>{const{alpha:i,webkitCompassHeading:n}=e;this.rotateTo(t,i,n)},"function"==typeof DeviceOrientationEvent.requestPermission){"granted"===(yield DeviceOrientationEvent.requestPermission())&&(this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",this.deviceOrientationHandler,!0))}else this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",this.deviceOrientationHandler,!0);setTimeout(()=>{this.deviceOrientationConnected&&t.on("movestart",()=>{this.ignoreMoveStart||(window.removeEventListener("deviceorientation",this.deviceOrientationHandler,!0),this.deviceOrientationHandler=void 0,clearInterval(this.rotateInterval),this.rotateInterval=void 0,this.deviceOrientationConnected=!1)})},1e3)}else this.deviceOrientationConnected&&this.doRotate(t)}))}
                    >Compass</vaadin-button
                >
            `,e)}rotateTo(t,e,i){this.alpha=null!=i?i:360-e,this.rotateInterval||(this.doRotate(t),this.rotateInterval=setInterval(()=>this.doRotate(t),1e3))}doRotate(t){this.ignoreMoveStart=!0,t.setPitch(60),t.rotateTo(this.alpha,{duration:1e3,animate:!0}),this.ignoreMoveStart=!1}onRemove(){this._container.parentNode.removeChild(this._container)}}}}]);