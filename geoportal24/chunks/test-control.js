(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{64:function(t,e,n){"use strict";n.r(e),n.d(e,"TestControl",(function(){return r}));n(58);var i=n(39),o=n(3),a=function(t,e,n,i){return new(n||(n=Promise))((function(o,a){function r(t){try{s(i.next(t))}catch(t){a(t)}}function c(t){try{s(i.throw(t))}catch(t){a(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,c)}s((i=i.apply(t,e||[])).next())}))};class r{constructor(){this.deviceOrientationConnected=!1,this.alpha=0}onAdd(t){return this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl",this.__init(t,this._container),this._container}__init(t,e){Object(o.c)(i.c`
                <vaadin-button
                    @click=${e=>a(this,void 0,void 0,(function*(){const n=e.target;if(DeviceOrientationEvent&&!this.deviceOrientationConnected){const e=e=>{const{alpha:i,webkitCompassHeading:o}=e;n.readonly=!0,this.rotateTo(t,i,o)};if("function"==typeof DeviceOrientationEvent.requestPermission){"granted"===(yield DeviceOrientationEvent.requestPermission())&&(this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",e,!0))}else this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",e,!0)}}))}
                    >Rotate</vaadin-button
                >
            `,e)}rotateTo(t,e,n){this.alpha=n>=0?n:360-e,this.rotateInterval||(this.rotateInterval=setInterval(()=>{t.rotateTo(this.alpha,{duration:1e3,animate:!0})},1e3))}onRemove(){this._container.parentNode.removeChild(this._container)}}}}]);