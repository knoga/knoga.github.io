(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{64:function(t,n,e){"use strict";e.r(n),e.d(n,"TestControl",(function(){return r}));e(58);var i=e(39),o=e(3),a=function(t,n,e,i){return new(e||(e=Promise))((function(o,a){function r(t){try{s(i.next(t))}catch(t){a(t)}}function c(t){try{s(i.throw(t))}catch(t){a(t)}}function s(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(r,c)}s((i=i.apply(t,n||[])).next())}))};class r{constructor(){this.deviceOrientationConnected=!1,this.alpha=0}onAdd(t){return this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl",this.__init(t,this._container),this._container}__init(t,n){Object(o.c)(i.c`
                <vaadin-button
                    @click=${n=>a(this,void 0,void 0,(function*(){const e=n.target;if(DeviceOrientationEvent&&!this.deviceOrientationConnected){const n=n=>{const{alpha:i,webkitCompassHeading:o}=n;e.readonly=!0,e.innerText=`alpha: ${i}, compasHeading: ${o}`,this.rotateTo(t,i,o)};if("function"==typeof DeviceOrientationEvent.requestPermission){"granted"===(yield DeviceOrientationEvent.requestPermission())&&(this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",n,!1))}else this.deviceOrientationConnected=!0,window.addEventListener("deviceorientation",n,!1)}}))}
                    >Rotate</vaadin-button
                >
            `,n)}rotateTo(t,n,e){this.alpha=e>=0?e:n,this.rotateInterval||(this.rotateInterval=setInterval(()=>{t.rotateTo(360-this.alpha,{duration:500,animate:!0})},500))}onRemove(){this._container.parentNode.removeChild(this._container)}}}}]);